#!/bin/sh

cd `pwd`/`dirname $0`

if test -z "$1"
then
    echo "argument needed"
    exit 1
fi

R=.
if test -n "$2"
then
    R="$2"
fi

if ! test -d "$R"
then
    echo "Not a directory: $R"
    exit 1
fi

echo '#ifndef DIAG_H' > diag.h
echo '#define DIAG_H' >> diag.h
echo "/* Autogenerated by `basename $0`. */" >> diag.h
echo '#include <stdlib.h>' >> diag.h
echo '#include <stdio.h>' >> diag.h
echo '#include <time.h>' >> diag.h
echo '#include <sys/limits.h>' >> diag.h
echo "#ifdef __cplusplus" >> diag.h
echo "extern \"C\" {" >> diag.h
echo "#endif" >> diag.h
echo '#define DIAG_CLASS_BASE INT_MIN' >> diag.h
echo '#define DIAG_CLASS_MASK 0xffff0000' >> diag.h
echo '#define DIAG_CLASS_SHL 16' >> diag.h
echo 'struct _diag_entry_st {int cls; const char *fmt;};' >> diag.h
echo 'const char *diag_str(int);' >> diag.h
echo "int ${1}_diag_class(unsigned, unsigned);" >> diag.h
echo "const char *${1}_diag_str(int);" >> diag.h
echo '#define FAIL(s) do { perror(s); abort(); } while (0)' >> diag.h


echo "/* Autogenerated by `basename $0`. */" > diag.c
echo '#include <stdio.h>' >> diag.c
echo '#include "diag.h"' >> diag.c
echo 'static struct _diag_entry_st diag_table[] = {' >> diag.c

:>diag.txt.tmp
while read i
do
    if grep --include '*.[ch]' -rn -q $i "$R"
    then
        echo $i >> diag.txt.tmp
    fi
done
mv diag.txt.tmp diag.txt

cat diag.txt | (
    cls=0
    echo "#define DIAG_NOERROR (DIAG_CLASS_BASE + (0<<DIAG_CLASS_SHL))" >> diag.h
    echo "{DIAG_NOERROR, \"DIAG_NOERROR+%d[%08x]\"}," >> diag.c
    cls=$((cls+1))
    while read str
    do
        test -z "$str" && continue
        echo "#define $str (DIAG_CLASS_BASE + (${cls}<<DIAG_CLASS_SHL))" >> diag.h
        echo "{$str, \"$str+%d[%08x]\"}," >> diag.c
        cls=$((cls+1))
    done
)

echo "#define diag_str ${1}_diag_str" >> diag.h
echo "#define diag_class ${1}_diag_class" >> diag.h

cat <<EOD >>diag.c
};
static char _diag_str[256];
const char *${1}_diag_str (int code)
{
    unsigned i;
    for (i = 0; i < sizeof(diag_table)/sizeof(struct _diag_entry_st); ++i) {
        if (${1}_diag_class(code, diag_table[i].cls)) {
            snprintf(_diag_str, sizeof(_diag_str), diag_table[i].fmt, (code & (~DIAG_CLASS_MASK)), code);
            return _diag_str;
        }
    }
    snprintf(_diag_str, sizeof(_diag_str), "unknown %d[%08x]", (code & (~DIAG_CLASS_MASK)), code);
    return _diag_str;
}

int ${1}_diag_class (unsigned code, unsigned cls)
{
    return (code & DIAG_CLASS_MASK) == cls;
}
EOD
echo "#ifdef __cplusplus" >> diag.h
echo "}" >> diag.h
echo "#endif" >> diag.h
echo '#endif' >> diag.h
